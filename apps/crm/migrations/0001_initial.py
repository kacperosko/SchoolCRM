# Generated by Django 4.2.23 on 2025-08-23 14:44

import apps.service_helper
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceList',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('lesson_date', models.DateTimeField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attenndancelist_createdby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=32)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grupa',
                'verbose_name_plural': 'Grupy',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('invoice_date', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_series', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('series_end_date', models.DateField(blank=True, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessonSchedule_lesson_group_relationship', to='crm.group')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Lokalizacja',
                'verbose_name_plural': 'Lokalizacje',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'verbose_name': 'Kontakt',
                'verbose_name_plural': 'Kontakty',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Student_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Student_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Studenci',
            },
        ),
        migrations.CreateModel(
            name='WatchRecord',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('object_id', models.CharField(blank=True, max_length=39, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPerson',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('relationship_type', models.CharField(choices=[('Matka', 'Matka'), ('Ojciec', 'Ojciec'), ('Babcia', 'Babcia'), ('Dziadek', 'Dziadek'), ('Inna', 'Inna')], max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_person_relationship', to='crm.person')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_student_relationship', to='crm.student')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('object_id', models.CharField(blank=True, max_length=39, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('content', models.CharField(max_length=200)),
                ('object_id', models.CharField(blank=True, max_length=39, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonDefinition',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('lesson_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration', models.IntegerField(choices=[(30, '30 min'), (45, '45 min'), (60, '60 min')])),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('series_end_date', models.DateField(blank=True, null=True)),
                ('is_series', models.BooleanField(default=False)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.group')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.location')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonAdjustment',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('original_lesson_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_start_time', models.DateTimeField()),
                ('modified_end_time', models.DateTimeField()),
                ('status', models.CharField(blank=True, choices=[('Zaplanowana', 'Zaplanowana'), ('Nieobecnosc', 'Nieobecność'), ('Odwolana - nauczyciel', 'Odwołana - nauczyciel'), ('Odwolana - 24h przed', 'Odwołana - 24h przed')], max_length=64, null=True)),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_lesson_relationship', to='crm.lesson')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonAdjustment_location_relationship', to='crm.location')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonAdjustment_teacher_user_relationship', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonSchedule_location_relationship', to='crm.location'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessonSchedule_student_student_relationship', to='crm.student'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonSchedule_teacher_user_relationship', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('amount', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.invoice')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.student'),
        ),
        migrations.CreateModel(
            name='GroupStudent',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_student_group_relationship', to='crm.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupStudent_student_relationship', to='crm.student')),
            ],
        ),
        migrations.CreateModel(
            name='FieldHistory',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('object_id', models.CharField(max_length=39)),
                ('field_name', models.CharField(max_length=255)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_type', models.CharField(choices=[('lesson', 'Lekcja'), ('standard', 'Standardowe Wydarzenie')], default='standard', max_length=32)),
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('event_date', models.DateField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('zaplanowana', 'Zaplanowana'), ('nieobecnosc', 'Nieobecność'), ('odwolana_nauczyciel', 'Odwołana - nauczyciel'), ('odwolana_24h_przed', 'Odwołana - 24h przed')], max_length=100)),
                ('original_lesson_datetime', models.DateTimeField()),
                ('duration', models.IntegerField(choices=[(30, '30 min'), (45, '45 min'), (60, '60 min')])),
                ('lesson_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.lessondefinition')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.location')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceListStudent',
            fields=[
                ('id', apps.service_helper.PrefixedUUIDField(max_length=39, primary_key=True, serialize=False, unique=True)),
                ('attendance_status', models.CharField(blank=True, choices=[('Obecnosc', 'Obecność'), ('Nieobecnosc', 'Nieobecność'), ('Spoznienie', 'Spóźnienie')], default='Obecnosc', max_length=64, null=True)),
                ('attendance_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_list_student_group_relationship', to='crm.attendancelist')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.student')),
            ],
        ),
        migrations.AddField(
            model_name='attendancelist',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_group_relationship', to='crm.group'),
        ),
        migrations.AddField(
            model_name='attendancelist',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attenndancelist_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Absense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Absense_teacher_user_relationship', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='lessondefinition',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('group__isnull', False), ('student__isnull', True)), models.Q(('group__isnull', True), ('student__isnull', False)), _connector='OR'), name='crm_lessondefinition_student_or_group'),
        ),
        migrations.AlterUniqueTogether(
            name='groupstudent',
            unique_together={('group', 'student')},
        ),
    ]
